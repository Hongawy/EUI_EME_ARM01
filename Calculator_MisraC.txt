..\DIO.h", line 26: warning #1472-D: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"..\DIO.h", line 28: warning #1472-D: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"..\DIO.h", line 30: warning #1472-D: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"..\lcd.h", line 18: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"..\lcd.h", line 19: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 20: warning #1499-D: (MISRA-C:2004 8.8/R) An external object or function shall be declared in one and only one file
"../main.c", line 21: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 21: warning #1499-D: (MISRA-C:2004 8.8/R) An external object or function shall be declared in one and only one file
"../main.c", line 22: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 22: warning #1499-D: (MISRA-C:2004 8.8/R) An external object or function shall be declared in one and only one file
"../main.c", line 31: warning #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("index")
"../main.c", line 35: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 35: warning #1455-D: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../main.c", line 37: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 37: warning #1400-D: (MISRA-C:2004 11.3/A) A cast should not be performed between a pointer type and an integral type
"../main.c", line 37: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../main.c", line 40: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 42: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 42: warning #1400-D: (MISRA-C:2004 11.3/A) A cast should not be performed between a pointer type and an integral type
"../main.c", line 42: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 44: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 45: warning #1455-D: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../main.c", line 48: warning #1383-D: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../main.c", line 54: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 54: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 55: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 55: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 56: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 56: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 57: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 59: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 59: warning #1455-D: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../main.c", line 65: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 65: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 67: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 67: warning #1400-D: (MISRA-C:2004 11.3/A) A cast should not be performed between a pointer type and an integral type
"../main.c", line 67: warning #1406-D: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../main.c", line 67: warning #1406-D: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../main.c", line 67: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 68: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 68: warning #1400-D: (MISRA-C:2004 11.3/A) A cast should not be performed between a pointer type and an integral type
"../main.c", line 68: warning #1406-D: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../main.c", line 68: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../main.c", line 68: warning #1397-D: (MISRA-C:2004 10.5/R) If the bitwise operators ~ and << are applied to an operand of underlying type unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand
"../main.c", line 69: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 69: warning #1400-D: (MISRA-C:2004 11.3/A) A cast should not be performed between a pointer type and an integral type
"../main.c", line 69: warning #1406-D: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../main.c", line 69: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 70: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 76: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 77: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 79: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 80: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 82: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 83: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 85: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 86: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 93: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 93: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 93: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 93: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 93: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 93: warning #1459-D: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../main.c", line 93: warning #1485-D: (MISRA-C:2004 6.2/R) signed and unsigned char type shall be used only for the storage and use of numeric values
"../main.c", line 97: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 97: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 97: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 97: warning #1405-D: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../main.c", line 97: warning #1459-D: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../main.c", line 97: warning #1485-D: (MISRA-C:2004 6.2/R) signed and unsigned char type shall be used only for the storage and use of numeric values
"../main.c", line 101: warning #1485-D: (MISRA-C:2004 6.2/R) signed and unsigned char type shall be used only for the storage and use of numeric values
"../main.c", line 103: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 103: warning #1455-D: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../main.c", line 104: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../main.c", line 104: warning #1455-D: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../main.c", line 106: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 74: warning #1471-D: (MISRA-C:2004 15.3/R) The final clause of a switch statement shall be the default clause
"../main.c", line 115: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 117: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 117: warning #1379-D: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("i")
"../main.c", line 118: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../main.c", line 121: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 123: warning #1498-D: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 123: warning #1379-D: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("i")
"../main.c", line 123: warning #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("j")
"../main.c", line 124: warning #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness